let a = 5 in
  let b = 6 in
    -(b, -(a, 10));
-(123, 44);
is_zero(0);
is_zero(1);
let a = 5 in
  if is_zero(a) then 5 else 4;
let a = -(5, 5) in
  if is_zero(a) then 5 else 4;
let f = traceproc (x) -(x, 11) in (f (f 77));
(traceproc (f) (f (f 77)) traceproc (x) -(x, 11));
let x = 200 in let f = traceproc (z) -(z, x) in let x = 100 in let g = traceproc (z) -(z, x) in -((f 1), (g 1));
let add = traceproc (x) traceproc (y) -(x, -(0, y)) in ((add 12) 32);
let minus = traceproc (x, y) -(x, y) in (minus 5 4);
let makemult =
  traceproc (maker)
    traceproc (x)
      if is_zero(x)
      then 0
      else -(((maker maker) -(x, 1)), -(0, 4))
in let times4 = traceproc (x) ((makemult makemult) x)
   in (times4 3);
let makemult =
  traceproc (maker)
    traceproc (x, y)
      if is_zero(x)
      then 0
      else -(((maker maker) -(x, 1) y), -(0, y))
in let mult = traceproc (x, y) ((makemult makemult) x y)
   in let makefac =
        traceproc (maker)
          traceproc (n)
            if is_zero(n)
            then 1
            else (mult n ((maker maker) -(n, 1)))
      in let fac = traceproc (n) ((makefac makefac) n)
         in (fac 10);
let true = is_zero(0)
in
  let false = is_zero(1)
  in
    let makeodd =
      traceproc (makerodd, makereven)
        traceproc (x)
          if is_zero(x)
          then false
          else ((makereven makerodd makereven) -(x, 1))
    in
      let makeeven =
        traceproc (makerodd, makereven)
          traceproc (x)
            if is_zero(x)
            then true
            else ((makerodd makerodd makereven) -(x, 1))
      in
        let odd = traceproc (x) ((makeodd makeodd makeeven) x) in
        let even = traceproc (x) ((makeeven makeodd makeeven) x) in
          (even 10);
let makerec =
  traceproc (f)
    (traceproc (m) traceproc (x) ((f (m m)) x)
     traceproc (m) traceproc (x) ((f (m m)) x))
in
  let maketimes4 = traceproc (f)
                     traceproc (x)
                       if is_zero(x)
                       then 0
                       else -((f -(x, 1)), -(0, 4))
  in let times4 = (makerec maketimes4)
     in (times4 3);
let makerec =
  traceproc (f)
    (traceproc (m) (f traceproc (x) ((m m) x))
     traceproc (m) (f traceproc (x) ((m m) x)))
in
  let maketimes4 = traceproc (f)
                     traceproc (x)
                       if is_zero(x)
                       then 0
                       else -((f -(x, 1)), -(0, 4))
  in let times4 = (makerec maketimes4)
     in (times4 3);
